datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
#setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/")
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") #no me corre con esta funcion
#archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
archivo<-"/home/clinux01/Escritorio/CamiLabo/Practicas/datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
#setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/")
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") #no me corre con esta funcion
#archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
archivo<-"/home/clinux01/Escritorio/CamiLabo/Practicas/datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
rm(list=ls())
getwd()
#setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/")
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") #no me corre con esta funcion
#archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
archivo<-"/home/clinux01/Escritorio/CamiLabo/Practicas/datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
temp <-scan("datos_tmedia_SABE_2010.txt",sep="") #no me corre con esta funcion
#setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/Datos Practica 3-20231011/")
temp <-scan("datos_tmedia_SABE_2010.txt",sep="") #no me corre con esta funcion
datos_temp<-data.frame(temp)
View(datos_temp)
temp_media <-scan("datos_tmedia_SABE_2010.txt",sep="") #en casa no me corre esta pero en la facu si
datos_temp<-data.frame(temp)
View(datos_temp)
Temp_media <-scan("datos_tmedia_SABE_2010.txt",sep="") #en casa no me corre esta pero en la facu si
datos_temp<-data.frame(Temp_media)
#b)Calcular el valor maximo y el mınimo de la serie teniendo en cuenta los puntos err´oneos y sin
#tenerlos en cuenta. Calcular la cantidad total de datos faltantes. Remover los elementos faltantes
#y los erroneos de la serie de temperatura.
valor_max<-c()
valor_min<-c()
extremos<-c()
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1]==dato_faltante]<-NA
datos_temp[,1][datos_temp[,1]>40]<-NA
for(valores in datos_temp[,1]){
if(as.numeric(valores) >40){
valor_max<-max(datos_temp[,1], na.rm = T)
valor_min<-min(datos_temp[,1], na.rm= T)
extremos<-c(valor_min,valor_max)
}else{
print("Error")
}
}
View(datos_temp)
for(valores in Temp_media){
if(as.numeric(valores) >40){
valor_max<-max(datos_temp[,1], na.rm = T)
valor_min<-min(datos_temp[,1], na.rm= T)
extremos<-c(valor_min,valor_max)
}else{
print("Error")
}
}
for(valores in Temp_media){
if(is.na(valores)){
valor_max<-max(datos_temp[,1], na.rm = T)
valor_min<-min(datos_temp[,1], na.rm= T)
extremos<-c(valor_min,valor_max)
}else{
print("Error")
}
}
is.na(Temp_media)
for(valores in Temp_media){
if(!is.na(valores)){
valor_max<-max(datos_temp[,1], na.rm = T)
valor_min<-min(datos_temp[,1], na.rm= T)
extremos<-c(valor_min,valor_max)
}else{
print("Error")
}
}
datos_temp[,1]
datos_temp_ordenado<-datos_temp[order(datos_temp$Temp_media,)]
datos_temp_ordenado<-datos_temp[order(datos_temp$Temp_media)]
print(datos_temp_ordenado)
datos_temp_ordenado<-datos_temp[order(datos_temp[,1],)]
datos_temp_ordenado<-datos_temp[order(datos_temp[1,],)]
datos_temp_ordenado<-sort(Temp_media)
datos_temp[,1][datos_temp[,1]==dato_faltante]<-NA
datos_temp[,1][datos_temp[,1]>40]<-NA
datos_temp_ordenado<-sort(Temp_media)
print(datos_temp_ordenado) #no da y deberia dar
#mediana
mediana_temp<-apply(datos_temp_ordenado,2,median())
#mediana
datos_temp_ordenado_df<-data.frame(datos_temp_ordenado)
View(datos_temp_ordenado_df)
mediana_temp<-apply(datos_temp_ordenado,2,median())
mediana_temp<-apply(datos_temp_ordenado_df,2,median())
mediana_temp<-apply(datos_temp_ordenado_df,2,median
mediana_temp<-apply(datos_temp_ordenado_df,2,median)
mediana_temp<-apply(datos_temp_ordenado_df,2,median)
View(datos_temp)
#d)Generar una serie de medias semanales a partir de los datos medios diarios
x<-seq(1:7, by=7)
#d)Generar una serie de medias semanales a partir de los datos medios diarios
x<-seq(0:7, by=7)
#d)Generar una serie de medias semanales a partir de los datos medios diarios
x<-seq(1,7, by=7)
#d)Generar una serie de medias semanales a partir de los datos medios diarios
x<-seq(1,8, by=7)
#d)Generar una serie de medias semanales a partir de los datos medios diarios
x<-seq(1,365, by=7)
View(datos_temp)
media_semanal<-c()
#d)Generar una serie de medias semanales a partir de los datos medios diarios
x<-seq(1,365, by=7)
media_semanal<-c()
for(valor in x){
media<-apply(datos_temp[,valor],1,mean)
media_semanal<-c(media_semanal,media)
}
for(valor in x){
media<-apply(datos_temp[valor,],2,mean)
media_semanal<-c(media_semanal,media)
}
datos_temp[1:7,]
for(valor in x){
media<-apply(datos_temp[valor+6,],2,mean)
media_semanal<-c(media_semanal,media)
}
for(valor in x){
media<-apply(datos_temp[valor+6,1],2,mean)
media_semanal<-c(media_semanal,media)
}
datos_temp[1:7,]
#d)Generar una serie de medias semanales a partir de los datos medios diarios
x<-seq(1,365, by=7)
media_semanal<-c()
for(valor in x){
media<-apply(datos_temp[valor:valor+6,],2,mean)
media_semanal<-c(media_semanal,media)
}
for (valor in x) {
media <- apply(datos_temp[valor:(valor+6),], 2, mean)
media_semanal <- c(media_semanal, media)
}
media_semanal<-c()
#d)Generar una serie de medias semanales a partir de los datos medios diarios
x<-seq(1,365, by=7)
for(valor in x){
media<-apply(datos_temp[valor:valor+6,],2,mean(datos_temp$Temp_media))
media_semanal<-c(media_semanal,media)
}
for(valor in x){
media<-apply(datos_temp[valor:valor+6,],2,mean(datos_temp))
media_semanal<-c(media_semanal,media)
}
for(valor in x){
media<-apply(datos_temp[valor:valor+6,],2,mean(datos_temp[,1]))
media_semanal<-c(media_semanal,media)
}
for(valor in x){
media<-apply(datos_temp[valor:valor+6,],2,mean)
media_semanal<-c(media_semanal,media)
}
x
datos_temp[1,7]
datos_temp$Temp_media[1,7]
datos_temp$Temp_media[1:7,]
datos_temp[1:7,]
datos_temp$Temp_media[1:7,]
for(valor in x){
media<-apply(datos_temp[valor:valor+6,],1,mean)
media_semanal<-c(media,media_semanal)
}
#d)Generar una serie de medias semanales a partir de los datos medios diarios de un data frame de dimensiones [1,1]
x<-seq(1,365, by=7)
media_semanal<-c()
for(valor in x){
media<-apply(datos_temp,datos_temp[valor:valor+6,1],mean,na.rm = TRUE)
media_semanal<-c(media,media_semanal)
}
for (valor in x) {
semana <- datos_temp[valor:(valor + 6), 1]
media <- mean(semana, na.rm = TRUE)
media_semanal <- c(media, media_semanal)
}
y<-seq(1,365,by=12)
365/12
365/31
365/30
y<-seq(1,365,by=30)  #mensual deberia car en cada uno, doce datos
anio<-c()
for(valor in y){
mes<-datos_temp[valor:(valor+30),1]
anio<-c(mes,anio)
}
anio
y
365/5
y<-seq(1,365,by=5)  #mensual deberia car en cada uno, doce datos
anio<-c()
for(valor in y){
mes<-datos_temp[valor:(valor+5),1]
anio<-c(mes,anio)
}
anio
print(length(mes))
y<-seq(1,365,by=5)  #mensual deberia car en cada uno, doce datos
anio<-c()
for(valor in y){
mes<-datos_temp[valor:(valor+4),1]
print(length(mes))
anio<-c(mes,anio)
}
anio_df<-data.frame(anio)
View(anio_df)
for (valor in y) {
mes <- datos_temp[valor:(valor + 4), 1]
print(length(mes))
anio <- c(anio, mes)
}
anio<-c()
y<-seq(1,365,by=5)  #mensual deberia car en cada uno, doce datos
for (valor in y) {
mes <- datos_temp[valor:(valor + 4), 1]
print(length(mes))
anio <- c(anio, mes)
}
for (valor in y) {
mes <- datos_temp[valor:(valor + 4), 1]
if(length(mes)==5){
anio<-c(mes,anio)
}else{
print("error")
}
}
for (valor in y) {
mes <- datos_temp[valor:(valor + 4), 1]
if(length(mes)==5){
mes_cadacinco<-mes
anio<-c(mes_cadacinco,anio)
}else{
print("error")
}
}
#setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/Datos Practica 3-20231011/")
Temp_media <-scan("datos_tmedia_SABE_2010.txt",sep="") #en casa no me corre esta pero en la facu si
datos_temp<-data.frame(Temp_media)
y<-seq(1,365,by=5)  #mensual deberia car en cada uno, doce datos
anio<-c()
for (valor in y) {
mes <- datos_temp[valor:(valor + 4), 1]
if(length(mes)==5){
mes_cadacinco<-mes
anio<-c(mes_cadacinco,anio)
}else{
print("error")
}
}
for (valor in y) {
mes <- datos_temp[valor:(valor + 4), 1]
if(length(mes)==5){
mes_cadacinco<-mean(mes, na.rm = T)
anio<-c(mes_cadacinco,anio)
}else{
print("error")
}
}
anio<-c()
y<-seq(1,365,by=5)  #mensual deberia car en cada uno, doce datos
anio<-c()
for (valor in y) {
mes <- datos_temp[valor:(valor + 4), 1]
mes_cadacinco<-mean(mes, na.rm = T)
anio<-c(mes_cadacinco,anio)
}
###############Clase Practica 12/10##################
#abrir archivos de excel en R
rm(list=ls())
setwd("/home/clinux01/Escritorio/CamiLabo/Practica_4/")
path = getwd( )
#cargo libreria
require(readxl)
# sintanxis<-excel_sheets(xls = nombre_archivo_xlsx, sheet = numero_o_nombre_de_hoja_a_abrir, ...)
library(readxl)
rchivo_ejemplo = paste(path,"/datos/datos.xls",sep="")
archivo_ejemplo = paste(path,"/datos/datos.xls",sep="")
cantidad_hojas <- length(excel_sheets(archivo_ejemplo)) #veo la cantidad de hojas del archivo
archivo_ejemplo = paste(path,"/datos/datos.xls",sep="")
cantidad_hojas <- length(excel_sheets(archivo_ejemplo)) #veo la cantidad de hojas del archivo
print(paste("El archivo tiene ", cantidad_hojas, " hojas"))
setwd("/home/clinux01/Escritorio/CamiLabo/Practica_4/")
path = getwd( )
archivo_ejemplo = paste(path,"datos.xls",sep="")
cantidad_hojas <- length(excel_sheets(archivo_ejemplo)) #veo la cantidad de hojas del archivo
archivo_ejemplo = paste(path,"datos.xls",sep="/")
cantidad_hojas <- length(excel_sheets(archivo_ejemplo)) #veo la cantidad de hojas del archivo
archivo<-excel_sheets(xls = datos.xls)
archivo_ejemplo = excel_sheets("datos.xls")
cantidad_hojas <- length(excel_sheets(archivo_ejemplo)) #veo la cantidad de hojas del archivo
archivo_ejemplo = ("datos.xls")
cantidad_hojas <- length(excel_sheets(archivo_ejemplo)) #veo la cantidad de hojas del archivo
print(paste("El archivo tiene ", cantidad_hojas, " hojas"))
nombre_hojas <- excel_sheets(archivo_ejemplo) #veo los nombres de las hojas del archivo
print("Estas hojas se llaman:",nombre_hojas)
print(nombre_hojas)
print(past("Estas hojas se llaman:",nombre_hojas))
print(paste("Estas hojas se llaman:",nombre_hojas))
abro_archivo_ejemplo <- read_excel(archivo_ejemplo, sheet = 3) #por numero de hoja
head(abro_archivo_ejemplo) #veo las primeras 6 filas
class(abro_archivo_ejemplo) #veo que tipo de objeto es
abro_archivo_ejemplo_lis<-as.list(abro_archivo_ejemplo)
View(abro_archivo_ejemplo_lis)
abro_archivo_ejemplo <- read_excel(archivo_ejemplo)
View(abro_archivo_ejemplo_lis)
View(abro_archivo_ejemplo)
setwd("/home/clinux01/Escritorio/CamiLabo/Practica_4/")
path = getwd( )
# sintanxis<-excel_sheets(xls = nombre_archivo_xlsx, sheet = numero_o_nombre_de_hoja_a_abrir, ...)
library(readxl)  #si esta instalada esto no debe dar error
archivo_ejemplo = "datos.xls"
cantidad_hojas <- length(excel_sheets(archivo_ejemplo)) #veo la cantidad de hojas del archivo
print(paste("El archivo tiene ", cantidad_hojas, " hojas"))
nombre_hojas <- excel_sheets(archivo_ejemplo) #veo los nombres de las hojas del archivo
print(paste("Estas hojas se llaman:",nombre_hojas))
print(nombre_hojas)
abro_archivo_ejemplo <- read_excel(archivo_ejemplo, sheet = 3) #por numero de hoja
abro_archivo_ejemplo <- read_excel(archivo_ejemplo, sheet = "serie") #otra opcion, por nombre de hoja
head(abro_archivo_ejemplo) #veo las primeras 6 filas
class(abro_archivo_ejemplo) #veo que tipo de objeto es
#abro_archivo_ejemplo_lis<-as.list(abro_archivo_ejemplo)  lo puedo forzar a ser otras cosas
#Ejercicio en clase
#abrir el archivo
archivo = "Historicos_Estacion_3316.xlsx"
nombre_hojas <- excel_sheets(archivo)
cantidad_hojas <- length(excel_sheets(archivo))
abro_archivo <- read_excel(archivo, sheet = 3)
abro_archivo <- read_excel(archivo, sheet = 1)
View(abro_archivo)
head(archivo)
library(lubridate)
head(abro_archivo)
attach(abro_archivo)
tiempos <- dmy_hm(datos_altura$'Fecha y Hora') #paso columna de fechas a
tiempos <- dmy_hm(abro_archivo$'Fecha y Hora') #paso columna de fechas a
anios <- year(tiempos) #extraigo los anios
meses <- month(tiempos) #extraigo los meses
dias <- day(tiempos)
mi_data_frame_alturas <- data.frame("Anio" = anios,
"Mes" = meses,
"Dia" = dias,
"Alturas" = datos_altura$'Altura [m]')
head(mi_data_frame_alturas)
mi_data_frame_alturas <- data.frame("Anio" = anios,
"Mes" = meses,
"Dia" = dias,
"Alturas" = abro_archivo$'Altura [m]')
head(mi_data_frame_alturas)
View(mi_data_frame_alturas)
attach(mi_data_frame_alturas)
dim(mi_data_frame_alturas)
#Calcular el promedio de la altura del río de enero para cada año entre 1980 y 2021
for(mes in names(mi_data_frame_alturas)){
if(mes==1){
prom_enero<-apply(mi_data_frame_alturas,4,mean)
}
}
print(prom_enero)
mi_data_frame_alturas$Mes
mi_data_frame_alturas
which(mi_data_frame_alturas[,2]==1)
mi_data_frame_alturas$Mes(mi_data_frame_alturas==1)
mi_data_frame_alturas[,2](mi_data_frame_alturas==1)
enero<-mi_data_frame_alturas$Mes(mi_data_frame_alturas==1)
enero<-mi_data_frame_alturas$Mes(mi_data_frame_alturas=1)
enero<-mi_data_frame_alturas$Mes[mi_data_frame_alturas=1]
mi_data_frame_alturas$Mes[mi_data_frame_alturas=1]
pos_enero<-which(mi_data_frame_alturas$Mes=1)
#Calcular el promedio de la altura del río de enero para cada año entre 1980 y 2021
for(mes in names(mi_data_frame_alturas)){
if(mes==Mes){
if(Mes==1)
enero=subset(mi_data_frame_alturas,Mes=="1")
prom_enero<-apply(mi_data_frame_alturas,4,mean)
}
}
#Calcular el promedio de la altura del río de enero para cada año entre 1980 y 2021
for(mes in names(mi_data_frame_alturas)){
if(mes==Mes){
enero=subset(mi_data_frame_alturas,mes=="1")
prom_enero<-apply(enero,4,mean)
}
}
#Calcular el promedio de la altura del río de enero para cada año entre 1980 y 2021
for(mes in names(mi_data_frame_alturas)){
if(mes==Mes){
enero=subset(mi_data_frame_alturas,Mes=="1")
prom_enero<-apply(enero,4,mean)
}
}
#Calcular el promedio de la altura del río de enero para cada año entre 1980 y 2021
for(mes in names(mi_data_frame_alturas)){
if(mes==Mes){
if(mes==1){
enero=subset(mi_data_frame_alturas,Mes=="1")
prom_enero<-apply(enero,4,mean)
}
}
}
for(variable  in names(mi_data_frame_alturas)){
if(variable==Mes){
if(variable==1){
enero=subset(mi_data_frame_alturas,Mes=="1")
prom_enero<-apply(enero,4,mean)
}
}
}
for(variable  in names(mi_data_frame_alturas)){
if(variable==Mes[[1]]){
if(variable==1){
enero=subset(mi_data_frame_alturas,Mes=="1")
prom_enero<-apply(enero,4,mean)
}
}
}
prom_enero
mi_data_frame_alturas[[2]][[1]]
mi_data_frame_alturas[[2]][1]
mi_data_frame_alturas[[2]]
which(mi_data_frame_alturas$Mes=1)
which(mi_data_frame_alturas$Mes==1)
enero<-mi_data_frame_alturas[,4][mi_data_frame_alturas[,2]==1]
anio<- Anio[posiciones_enero,1]
posiciones_enero<-which(mi_data_frame_alturas$Mes==1)
anio<- Anio[posiciones_enero,1]
anios<-mi_data_frame_alturas[,1][mi_data_frame_alturas[,2]==1]
df_enero<-data.frame(enero,anios)
View(df_enero)
prom_enero<-apply(df_enero,1,mean)
enero_anio<-df_enero[,1][df_enero[,2]==1980]
x<-seq(1980,2021,by=1)
for(anio in x){
enero=subset(df_enero,anios==anio)
prom_enero<-mean(enero)
datos_enero<-c(prom_enero,datos_enero)
}
datos_enero<-c()
datos_enero<-c()
x<-seq(1980,2021,by=1)
for(anio in x){
enero=subset(df_enero,anios==anio)
prom_enero<-mean(enero, na.rm=TRUE)
datos_enero<-c(prom_enero,datos_enero)
}
datos_enero
prom_enero
for(anio in x){
enero_anio<-df_enero[,1][df_enero[,2]==anio]
prom_enero<-mean(enero, na.rm=TRUE)
datos_enero<-c(prom_enero,datos_enero)
}
#abro_archivo_ejemplo_lis<-as.list(abro_archivo_ejemplo)  lo puedo forzar a ser otras cosas
#Ejercicio en clase
#abrir el archivo
archivo = "Historicos_Estacion_3316.xlsx"
abro_archivo <- read_excel(archivo, sheet = 1)
attach(abro_archivo)
tiempos <- dmy_hm(abro_archivo$'Fecha y Hora') #paso columna de fechas a
anios <- year(tiempos) #extraigo los anios
meses <- month(tiempos) #extraigo los meses
dias <- day(tiempos)
mi_data_frame_alturas <- data.frame("Anio" = anios,
"Mes" = meses,
"Dia" = dias,
"Alturas" = abro_archivo$'Altura [m]')
head(mi_data_frame_alturas)
attach(mi_data_frame_alturas)
#Otra forma
datos_enero<-c()
x<-seq(1980,2021,by=1)
for(anio in x){
enero_anio<-df_enero[,1][df_enero[,2]==anio]
prom_enero<-mean(enero_anio, na.rm=TRUE)
datos_enero<-c(prom_enero,datos_enero)
}
#Otra forma
datos_enero<-c()
x<-seq(1980,2021,by=1)
enero<-mi_data_frame_alturas[,4][mi_data_frame_alturas[,2]==1]
anios<-mi_data_frame_alturas[,1][mi_data_frame_alturas[,2]==1]
df_enero<-data.frame(enero,anios)
for(anio in x){
enero_anio<-df_enero[,1][df_enero[,2]==anio]
prom_enero<-mean(enero_anio, na.rm=TRUE)
datos_enero<-c(prom_enero,datos_enero)
}
#Estimar cual es el minimo de la media de altura de río de enero y a que año corresponde
min_enero<-min(datos_enero)
max_enero<-max(datos_enero)
pos_min<-which(min_enero)
pos_min<-which(df_enero$anios=min_enero)
enero_anio<-df_enero$enero[df_enero$anios==anio]
prom_enero<-mean(enero_anio, na.rm=TRUE)
datos_enero<-c(prom_enero,datos_enero)
365/5
install.packages("writexl")
365-1
364/4
364/5
364/5
365/4
